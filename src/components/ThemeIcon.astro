---
import lightModeIcon from "../assets/common/ic_light-mode.svg";
import darkModeIcon from "../assets/common/ic_dark-mode.svg";

const ICON_SIZE_PC = "32px";
const ICON_SIZE_TAB = "24px";
const ICON_SIZE_SP = "16px";
---

<button id="themeToggle">
  <img class="light-mode-icon" src={lightModeIcon.src} alt="light mode" />
  <img class="dark-mode-icon" src={darkModeIcon.src} alt="dark mode" />
</button>

<style define:vars={{ ICON_SIZE_PC, ICON_SIZE_TAB, ICON_SIZE_SP }}>
  #themeToggle {
    border: none;
    background: none;
    margin: 4px 10px;
    width: var(--ICON_SIZE_PC);
    height: var(--ICON_SIZE_PC);
  }

  .light-mode-icon {
    width: var(--ICON_SIZE_PC);
    height: var(--ICON_SIZE_PC);
  }

  .dark-mode-icon {
    width: var(--ICON_SIZE_PC);
    height: var(--ICON_SIZE_PC);
    display: none;
  }

  :global(.dark) .light-mode-icon {
    display: none;
  }
  :global(.dark) .dark-mode-icon {
    display: inline;
  }

  @media (min-width: 960px) and (max-width: 1280px) {
    #themeToggle {
      width: var(--ICON_SIZE_TAB);
      height: var(--ICON_SIZE_TAB);
    }

    .light-mode-icon {
      width: var(--ICON_SIZE_TAB);
      height: var(--ICON_SIZE_TAB);
    }

    .dark-mode-icon {
      width: var(--ICON_SIZE_TAB);
      height: var(--ICON_SIZE_TAB);
    }
  }

  @media (max-width: 960px) {
    #themeToggle {
      width: var(--ICON_SIZE_SP);
      height: var(--ICON_SIZE_SP);
    }

    .light-mode-icon {
      width: var(--ICON_SIZE_SP);
      height: var(--ICON_SIZE_SP);
    }

    .dark-mode-icon {
      width: var(--ICON_SIZE_SP);
      height: var(--ICON_SIZE_SP);
    }
  }
</style>

<script>
  document.addEventListener("astro:page-load", () => {
    const theme = (() => {
      if (
        typeof localStorage !== "undefined" &&
        localStorage.getItem("theme")
      ) {
        return localStorage.getItem("theme");
      }
      if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
        return "dark";
      }
    })();

    if (theme === "light" || !theme) {
      document.documentElement.classList.remove("dark");
    } else {
      document.documentElement.classList.add("dark");
    }

    if (theme) window.localStorage.setItem("theme", theme);

    const handleToggleClick = () => {
      const element = document.documentElement;
      element.classList.toggle("dark");

      const isDark = element.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    };

    document.getElementById("themeToggle")!.onclick = handleToggleClick;
  });
</script>

<script is:inline>
  function applyTheme() {
    localStorage.theme === "dark"
      ? document.documentElement.classList.add("dark")
      : document.documentElement.classList.remove("dark");
  }

  document.addEventListener("astro:after-swap", applyTheme);
  applyTheme();
</script>
